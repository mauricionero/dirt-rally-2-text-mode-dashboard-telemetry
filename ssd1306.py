#!/usr/bin/python3

# import time
import math
import numpy as np

class Ssd1306Driver:
	DEFAULT_ADDRESS = 0x3C

	ADDRESS_MODE_HORIZONTAL = 0x20 # next page and reset column
	ADDRESS_MODE_VERTICAL = 0x21 # goes vertical in pages and then next column
	ADDRESS_MODE_PAGE = 0x22 # when column ends, go to begin. of same page
	ADDRESS_COL_START = 0x00
	ADDRESS_COL_END = 0x7F
	ADDRESS_PAGE_START = 0x00
	ADDRESS_PAGE_END = 0x07

	bus = None
	address = None

	addr_col_start = ADDRESS_COL_START
	addr_col_end = ADDRESS_COL_END
	addr_page_start = ADDRESS_PAGE_START
	addr_page_end = ADDRESS_PAGE_END

	COLUMN_HIGHT = 8

	char_byte_map = {} # will be filled at initialization time

	def __init__(self, smBus, address = DEFAULT_ADDRESS):
		if address == None:
			address = self.DEFAULT_ADDRESS
		self.bus = smBus
		self.address = address
		self.char_byte_map = {
			'6': self.generate_fonts('4x6'),
			'13b': self.generate_fonts('10x13-b')
		}
	
	def calculate_full_byte(self):
		return 2 ** self.COLUMN_HIGHT - 1
	
	def draw_current_column(self, byte = 0x00):
		self.send_data(0x40, byte)

	def fill_current_column(self):
		byte = self.calculate_full_byte()
		self.draw_current_column(byte)

	def fill_current_page(self, byte = None):
		if byte == None:
			byte = self.calculate_full_byte()
		self.set_column_address()
		for _ in range(self.addr_col_start, self.addr_col_end + 1):
			self.draw_current_column(byte)
	
	def clear_screen(self):
		self.fill_screen(0x00)
	
	def fill_screen(self, byte = None):
		if byte == None:
			byte = self.calculate_full_byte()
		self.set_page_address()
		for page_address in range(self.addr_page_start, self.addr_page_end + 1):
			self.fill_current_page(byte)

	def display_on(self):
		self.send_data(0x00, 0xAF)
	
	def display_off(self):
		self.send_data(0x00, 0xAE)
	
	def reset_cursor(self):
		self.set_column_address()
		self.set_page_address()
	
	# 127 max
	def set_column_address(self, start_address = ADDRESS_COL_START, end_address = ADDRESS_COL_END):
		self.addr_col_start = start_address
		self.addr_col_end = end_address

		self.send_data(0x00, 0x21)
		self.send_data(0x00, start_address)
		self.send_data(0x00, end_address)
	
	last_start_address = None
	last_end_address = None
	# 7 max
	def set_page_address(self, start_address = ADDRESS_PAGE_START, end_address = ADDRESS_PAGE_END):
		if start_address == self.last_start_address and end_address == self.last_end_address:
			return
		
		self.addr_page_start = start_address
		self.addr_page_end = end_address

		self.send_data(0x00, 0x22)
		self.send_data(0x00, start_address)
		self.send_data(0x00, end_address)

		self.last_start_address = start_address
		self.last_start_address = end_address
	
	def simple_setup(self):
		self.set_multiplex_ratio()
		self.set_display_offset()
		self.set_start_line()
		self.set_left_right()
		self.set_top_bottom()
		self.set_com_pin_conf()
		self.set_contrast()
		self.set_display_ram_content()
		self.set_display_mode()
		self.set_clock()
		self.set_page_addr_mode()
	
	# 0x10 to 0x3F
	def set_multiplex_ratio(self, ratio = 0x3F):
		self.send_data(0x00, 0xA8)
		self.send_data(0x00, ratio)
	
	def set_display_offset(self, offset = 0x00):
		self.send_data(0x00, 0xD3)
		self.send_data(0x00, offset)
	
	# 0 to 63
	def set_start_line(self, start_line = 0):
		self.send_data(0x00, 0x40 + start_line)
	
	def set_left_right(self, left_right = True):
		if left_right:
			self.send_data(0x00, 0xA1)
		else:
			self.send_data(0x00, 0xA0)
	
	def set_top_bottom(self, top_bottom = True):
		if top_bottom:
			self.send_data(0x00, 0xC8)
		else:
			self.send_data(0x00, 0xC0)
	
	def set_com_pin_conf(self):
		self.send_data(0x00, 0xDA)
		self.send_data(0x00, 0x12)
	
	# from 00 to 7f (127)
	def set_contrast(self, contrast = 0x60):
		self.send_data(0x00, 0x81)
		self.send_data(0x00, contrast)
	
	def set_display_ram_content(self):
		self.send_data(0x00, 0xA4)
	
	def set_disable_ram_content():
		self.send_data(0x00, 0xA5)
	
	# Set Normal/Inverse Display (0xA6 / 0xA7):
	def set_display_mode(self, inverse = False):
		if inverse:
			self.send_data(0x00, 0xA7)
		else:
			self.send_data(0x00, 0xA6)
	
	def set_clock(self):
		self.send_data(0x00, 0xD5)
		self.send_data(0x00, 0x80)
	
	# ??
	def set_charge_pump(self, enable = False):
		self.send_data(0x00, 0x8D)
		if enable:
			self.send_data(0x00, 0x14)
		else:
			self.send_data(0x00, 0x0B)
	
	last_addr_mode = None
	def set_page_addr_mode(self, addr_mode = ADDRESS_MODE_HORIZONTAL):
		if addr_mode == self.last_addr_mode:
			return
		
		self.send_data(0x00, 0x20)
		self.send_data(0x00, addr_mode)

	def send_data(self, command, value):
		self.bus.write_byte_data(self.address, command, value)
	
	###

	def write_screen(self, page, text, begin_addr, size, font_height = 6, variation = ''):
		addr_mode = self.ADDRESS_MODE_HORIZONTAL
		page_extra_size = 0
		if font_height > 8:
			addr_mode = self.ADDRESS_MODE_VERTICAL
			page_extra_size += math.floor(font_height / 8)
		end_page = page + page_extra_size
		
		font_height = str(font_height)
		
		self.set_page_addr_mode(addr_mode)
		self.set_page_address(page, end_page)
		self.set_column_address(begin_addr, begin_addr + size)
		for _i, c in enumerate(text):
			for b in self.char_byte_map[font_height+variation][c]:
				self.send_data(0x40, b)
			for s in range(0, 1+page_extra_size):
				self.send_data(0x40, 0x00) # 1px space
	
	def icon_screen(self, page, icon, begin_addr, font_height = 6):
		self.set_page_addr_mode(self.ADDRESS_MODE_HORIZONTAL)
		self.set_page_address(page, page)
		self.set_column_address(begin_addr, begin_addr + 8)
		for b in self.CHAR_MAP[icon][font_height]:
			self.send_data(0x40, b)

	last_objective_address = None
	def horizontal_bar(self, page, begin_addr, size, percent_fill = 0.0):
		self.set_page_addr_mode(self.ADDRESS_MODE_HORIZONTAL)
		self.set_page_address(page, page)
		max_address = begin_addr + size - 1
		if percent_fill > 1:
			percent_fill = 1
		objective_address = int((max_address - begin_addr) * percent_fill + begin_addr)

		vertical_border = 0xFF
		horizontal_border = 0x81

		if self.last_objective_address == None:
			start_scan = begin_addr
			finish_scan = objective_address
		else:
			start_scan = self.last_objective_address
			finish_scan = objective_address
		
		if start_scan <= finish_scan:
			self.set_column_address(start_scan, finish_scan)
			for _ in range(start_scan, finish_scan):
				self.draw_current_column(vertical_border)
		else:
			self.set_column_address(finish_scan, start_scan)
			for _ in range(finish_scan, start_scan):
				self.draw_current_column(horizontal_border)
		
		# complete first time drawing
		if self.last_objective_address == None:
			self.set_column_address(finish_scan, max_address + 1)
			for _ in range(finish_scan, max_address - 3, 1):
				self.draw_current_column(horizontal_border)
			self.draw_current_column(vertical_border)
		
		self.last_objective_address = objective_address

	def generate_fonts(self, font_name):
		font_map = self.FONT_MAP[font_name]
		char_c = font_map['char_size'][0]
		char_l = font_map['char_size'][1]

		self.char_byte_map = {}
		c = -1
		l = 0
		matrixx = {}
		for i, b in enumerate(font_map['data']):
			c += 1
			if c >= font_map['data_size'][0]:
				c = 0
				l += 1
			char_c_current_pos = c % char_c
			current_char = font_map['chars'][math.floor(l/char_l)][math.floor(c/char_c)]
			if not current_char in matrixx:
				matrixx[current_char] = []
			if char_c_current_pos == 0:
				try:
					matrixx[current_char][l%char_l] = []
				except:
					matrixx[current_char].append([])
			elif char_c_current_pos == char_c - 1:
				continue
			matrixx[current_char][l%char_l].append(int(b))
		
		trans_matrix = {}
		for char_m in matrixx:
			trans_matrix[char_m] = np.array(matrixx[char_m]).transpose()
		
		bin_matrix = {}
		for char_m in trans_matrix:
			bin_matrix[char_m] = []
			line = -1
			for char_col in trans_matrix[char_m]:
				line += 1
				pos = -1
				for val_pixel in char_col:
					pos += 1
					bin_matrix_pos = (line*math.floor(char_l/8)) + math.floor(pos/8)
					bin_val = val_pixel * 2 ** (pos - math.floor(pos/8) * 8)
					try:
						bin_matrix[char_m][bin_matrix_pos] += bin_val
					except:
						bin_matrix[char_m].append(bin_val)

		return bin_matrix
	
	# pseudo pixel images to generate the bytes for char_byte_map
	FONT_MAP = {
		'3x6': {
			'char_size': [4, 8],
			'chars': [
				'abcdefghijklmnopqrstuvwxyz',
				'ABCDEFGHIJKLMNOPQRSTUVWXYZ',
				"0123456789.:,;(*!?')/-    "
			],
			'data_size': [104, 24],
			'data': '000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000010000000100000100001000010100011000000000000000000000000000000010000000000000000000000000001101100011001100100010001101100000000001010010010101100010011000110101001101110101010101010101010101110101010101000101010101110101010101100001011000100111010101010101010101100110001001010101010100100101000101010101010001010110001000110101001000010101001001010101010101100101010000010010010101010111001000110010001101100011001100110010000101010111000101010111010101010010010000110100011000010011001001010101000101110000000000000000000000000110000000000110000000000000000000000100000100000000000000000000000000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011000100110011101110011010101110001010101000101000100100110001001100011011101010101010101010101011101010101010101010100010001000101001000010101010001110101010101010101010101000010010101010101010101010001011101100100010101100110010101110010000101100100011101110101011001010110001000100101010101110010001000100101010101010101010001000101010100100101010101000101010101010100010101010001001001010111011101010010010001010110001001100111010000110101011100100101011101010100001001000010010101100010011100100101010100100111000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000100010011101010111001101110011001000000000000000000001010100100110001001000001000000000000000000000101011001010001010101000100000101010101000000100000001000100010001000010010001000010000000000000000000001110010000100100111011001100010001000110000000000000000001001110010001000000010001000000000000000000000010100100010000100010001010101000101000100000000000000000010001000000000000000100010011100000000000000000010011101110110000101100010010001100110001000100010001000100101001000100000001001000000000000000000000000000000000000000000000000000000000000000000000001000100000100000000000000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'
		},
		'4x6': {
			'char_size': [5, 8],
			'chars': [
				'abcdefghijklmnopqrstuvwxyz',
				'ABCDEFGHIJKLMNOPQRSTUVWXYZ',
				"0123456789.:,;(*!?')/-    "
			],
			'data_size': [130, 24],
			'data
		},
		'10x13-b': {
			'char_size': [10, 16],
			'chars': [
				'abcdefghijklmnopqrstuvwxyz',
				'ABCDEFGHIJKLMNOPQRSTUVWXYZ',
				"0123456789.:,;(*!?')      "
			],
			'data_size': [260, 48],
			'data
		}
	}

	# mapping the binary for the icons
	CHAR_MAP = {
		'speed': {
			6: [0b00111000, 0b01000100, 0b01001010, 0b01010010, 0b01000010, 0b01000100, 0b00111000]
		},
		'maxspeed': {
			6: [0b00111000, 0b01000100, 0b01000010, 0b01010010, 0b01010010, 0b01010100, 0b00111000]
		}
	}